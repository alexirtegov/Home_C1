/*
Давайте подробно разберем каждую часть этого заголовочного файла:

1. #ifndef MAX_EX3_H
Назначение: Защита от повторного включения (include guard)
Как работает:
Проверяет, не был ли уже определен макрос FUNC_H. 
Если не был — выполняет последующий код до #endif.
Аналог: "Если я еще не заходил в эту комнату — 
вхожу и помечаю дверь".

2. #define MAX_EX3_H
Назначение: Определение макроса-метки
Как работает:
Создает уникальный идентификатор FUNC_H, который 
"помечает" факт обработки этого файла.
Важно: Имя должно быть уникальным для каждого 
заголовочного файла (обычно = имя файла в верхнем регистре).

3. int max(int a, int b);
Назначение: Объявление функции (function declaration)
Что это дает:
Сообщает компилятору: "Где-то существует функция 
max с такой сигнатурой"
Разрешает использовать max() в других файлах, 
которые включают этот заголовок

4. #endif
Назначение: Завершение блока защиты
Как работает:
Закрывает секцию, начатую с #ifndef. 
Весь код между ними защищен от повторного включения.

Первое включение:
#ifndef MAX_EX3_H → истина (макрос не определен)
#define MAX_EX3_H → создает метку
Объявление функции обрабатывается
Второе включение:
#ifndef MAX_EX3_H → ложь (метка уже есть)
Весь блок пропускается до #endif

Всегда используйте имя, связанное с файлом:
vectors.h → VECTORS_H
matrix_operations.h → MATRIX_OPERATIONS_H
*/


//max_ex3.h
#ifndef MAX_EX3_H //защита от повторного включения
#define MAX_EX3_H

int max(int a, int b);  //только объявление

//объявим глобальную переменную
extern int m; // Ключевое слово extern обязательно!

#endif
